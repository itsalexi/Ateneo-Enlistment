name: Update AISIS Courses

on:
  schedule:
    # Runs at 00:00 UTC every day
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-courses:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Create empty cookies file
        run: |
          python -c "import pickle; pickle.dump({}, open('cookies.pkl', 'wb'))"

      - name: Check secrets availability
        run: |
          if [ -z "${{ secrets.AISIS_USERNAME }}" ]; then
            echo "Error: AISIS_USERNAME secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.AISIS_PASSWORD }}" ]; then
            echo "Error: AISIS_PASSWORD secret is not set"
            exit 1
          fi
          echo "Secrets are properly configured"

      - name: Run AISIS scraper
        id: scraper
        env:
          AISIS_USERNAME: ${{ secrets.AISIS_USERNAME }}
          AISIS_PASSWORD: ${{ secrets.AISIS_PASSWORD }}
        run: |
          echo "Running scraper with configured credentials"
          python aisis_scraper.py
          if [ -f "data/courses.json" ] && [ -s "data/courses.json" ]; then
            echo "scraper_success=true" >> $GITHUB_OUTPUT
          else
            echo "scraper_success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Update lastUpdated timestamp
        if: steps.scraper.outputs.scraper_success == 'true'
        run: |
          timestamp=$(python -c "import time; print(int(time.time() * 1000))")
          sed -i "s/const lastUpdated = [0-9]\+;/const lastUpdated = $timestamp;/" app/page.js

      - name: Configure Git
        if: steps.scraper.outputs.scraper_success == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Commit and push if changed
        if: steps.scraper.outputs.scraper_success == 'true'
        run: |
          git add data/courses.json app/page.js
          git diff --staged --quiet || (git commit -m "Auto-update courses and timestamp [skip ci]" && git push)

      - name: Cleanup
        if: always()
        run: |
          rm -f cookies.pkl
